<?php
/**
 * DefaultApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Onfido
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Onfido;

use \Onfido\Configuration;
use \Onfido\ApiClient;
use \Onfido\ApiException;
use \Onfido\ObjectSerializer;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  Onfido
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DefaultApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for cancelReport
     *
     * This endpoint is for cancelling individual paused reports..
     *
     */
    public function testCancelReport()
    {

    }

    /**
     * Test case for createApplicant
     *
     * Create Applicant.
     *
     */
    public function testCreateApplicant()
    {

    }

    /**
     * Test case for createCheck
     *
     * Create a check.
     *
     */
    public function testCreateCheck()
    {

    }

    /**
     * Test case for createWebhook
     *
     * Create a webhook.
     *
     */
    public function testCreateWebhook()
    {

    }

    /**
     * Test case for destroyApplicant
     *
     * Delete Applicant.
     *
     */
    public function testDestroyApplicant()
    {

    }

    /**
     * Test case for downloadDocument
     *
     * Download a documents raw data.
     *
     */
    public function testDownloadDocument()
    {

    }

    /**
     * Test case for downloadLivePhoto
     *
     * Download live photo.
     *
     */
    public function testDownloadLivePhoto()
    {

    }

    /**
     * Test case for findAddresses
     *
     * Search for addresses by postcode.
     *
     */
    public function testFindAddresses()
    {

    }

    /**
     * Test case for findApplicant
     *
     * Retrieve Applicant.
     *
     */
    public function testFindApplicant()
    {

    }

    /**
     * Test case for findCheck
     *
     * Retrieve a Check.
     *
     */
    public function testFindCheck()
    {

    }

    /**
     * Test case for findDocument
     *
     * A single document can be retrieved by calling this endpoint with the document’s unique identifier..
     *
     */
    public function testFindDocument()
    {

    }

    /**
     * Test case for findLivePhoto
     *
     * Retrieve live photo.
     *
     */
    public function testFindLivePhoto()
    {

    }

    /**
     * Test case for findReport
     *
     * A single report can be retrieved using this endpoint with the corresponding unique identifier..
     *
     */
    public function testFindReport()
    {

    }

    /**
     * Test case for findReportTypeGroup
     *
     * Retrieve single report type group object.
     *
     */
    public function testFindReportTypeGroup()
    {

    }

    /**
     * Test case for findWebhook
     *
     * Retrieve a Webhook.
     *
     */
    public function testFindWebhook()
    {

    }

    /**
     * Test case for listApplicants
     *
     * List Applicants.
     *
     */
    public function testListApplicants()
    {

    }

    /**
     * Test case for listChecks
     *
     * Retrieve Checks.
     *
     */
    public function testListChecks()
    {

    }

    /**
     * Test case for listDocuments
     *
     * List documents.
     *
     */
    public function testListDocuments()
    {

    }

    /**
     * Test case for listLivePhotos
     *
     * List live photos.
     *
     */
    public function testListLivePhotos()
    {

    }

    /**
     * Test case for listReportTypeGroups
     *
     * Retrieve all report type groups.
     *
     */
    public function testListReportTypeGroups()
    {

    }

    /**
     * Test case for listReports
     *
     * All the reports belonging to a particular check can be listed from this endpoint..
     *
     */
    public function testListReports()
    {

    }

    /**
     * Test case for listWebhooks
     *
     * List webhooks.
     *
     */
    public function testListWebhooks()
    {

    }

    /**
     * Test case for restoreApplicant
     *
     * Restore Applicant.
     *
     */
    public function testRestoreApplicant()
    {

    }

    /**
     * Test case for resumeCheck
     *
     * Resume a Check.
     *
     */
    public function testResumeCheck()
    {

    }

    /**
     * Test case for resumeReport
     *
     * This endpoint is for resuming individual paused reports..
     *
     */
    public function testResumeReport()
    {

    }

    /**
     * Test case for updateApplicant
     *
     * Update Applicant.
     *
     */
    public function testUpdateApplicant()
    {

    }

    /**
     * Test case for uploadDocument
     *
     * Upload a document.
     *
     */
    public function testUploadDocument()
    {

    }

    /**
     * Test case for uploadLivePhoto
     *
     * Upload live photo.
     *
     */
    public function testUploadLivePhoto()
    {

    }

}
